<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://ckardaris.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ckardaris.github.io/" rel="alternate" type="text/html" /><updated>2024-05-09T18:02:41+00:00</updated><id>https://ckardaris.github.io/feed.xml</id><title type="html">Charalampos Kardaris</title><entry><title type="html">ChatGPT and the web ignorant</title><link href="https://ckardaris.github.io/blog/2024/05/09/chatgpt-and-the-web-ignorant.html" rel="alternate" type="text/html" title="ChatGPT and the web ignorant" /><published>2024-05-09T00:00:00+00:00</published><updated>2024-05-09T00:00:00+00:00</updated><id>https://ckardaris.github.io/blog/2024/05/09/chatgpt-and-the-web-ignorant</id><content type="html" xml:base="https://ckardaris.github.io/blog/2024/05/09/chatgpt-and-the-web-ignorant.html"><![CDATA[<p>The first time I used ChatGPT I was astounded. Here was something that felt like
magic. Since then, a lot more information has been made available about LLMs in
general. Us laymen have peeked inside the magician’s hat. We know more about
their capabilities and shortcomings. We know that they can hallucinate at times
and that their output should be used with care. But the point still remains;
what ChatGPT and the rest of the LLMs offer is awesome.</p>

<p>I mostly use ChatGPT for my programming tasks. While learning new concepts, it
has mostly replaced searching the web for me. I prefer its clean interface: a
question followed by an answer. Most times the answer is on point, something you
don’t get out of a traditional search engine these days. The top-ranked
SEO-heavy posts create an additional burden on me to filter them, which is not
always an easy task, or a worthwhile one. For specific technical matters, I
still prefer to directly visit the reference or documentation websites<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>.</p>

<p>I first set up this personal website two years ago. I realised that GitHub
pages would be a simple way to go about it. I set up Jekyll and started
tinkering with a theme<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">2</a></sup>. Initially hesitant to begin posting, I uploaded
some of my photography and left it at that.</p>

<p>About two weeks ago, I decided that I wanted to bring some life back into it. I
set up my local environment again and started improving the website, bit by bit.
I introduced post tags and tag pages<sup id="fnref:3" role="doc-noteref"><a href="#fn:3" class="footnote" rel="footnote">3</a></sup>. I uploaded my first
<a href="/blog/2024/05/04/see-you-at-the-library.html">post</a>.</p>

<p>One thing remained and I would be set: a better gallery view for my
<a href="/photography">photos</a>. From the first moment, I wanted to have a grid view.
However, I am not very proficient in CSS and, at the time, I could not make it
work as I wanted. I put my photos in a single column and called it a day.</p>

<p><img src="/assets/images/2024-05-06-chatgpt-stories-helping-a-ruby-ignorant-0.png" alt="Single column photo
gallery" /></p>

<p>Enter ChatGPT.</p>

<blockquote>
  <p>I want to put photos in a three column grid. When the screen size reduces, I
want it to be responsive. What is the proper way to do it?</p>
</blockquote>

<p>ChatGPT replied.</p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"grid-container"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"grid-item"</span><span class="nt">&gt;&lt;img</span> <span class="na">src=</span><span class="s">"photo1.jpg"</span> <span class="na">alt=</span><span class="s">"Photo 1"</span><span class="nt">&gt;&lt;/div&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"grid-item"</span><span class="nt">&gt;&lt;img</span> <span class="na">src=</span><span class="s">"photo2.jpg"</span> <span class="na">alt=</span><span class="s">"Photo 2"</span><span class="nt">&gt;&lt;/div&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"grid-item"</span><span class="nt">&gt;&lt;img</span> <span class="na">src=</span><span class="s">"photo3.jpg"</span> <span class="na">alt=</span><span class="s">"Photo 3"</span><span class="nt">&gt;&lt;/div&gt;</span>
  <span class="c">&lt;!-- Add more grid items as needed --&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>
<p>and</p>
<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">.grid-container</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="n">grid</span><span class="p">;</span>
  <span class="py">grid-template-columns</span><span class="p">:</span> <span class="nb">repeat</span><span class="p">(</span><span class="n">auto-fit</span><span class="p">,</span> <span class="n">minmax</span><span class="p">(</span><span class="m">300px</span><span class="p">,</span> <span class="m">1</span><span class="n">fr</span><span class="p">));</span>
  <span class="py">grid-gap</span><span class="p">:</span> <span class="m">10px</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.grid-item</span> <span class="p">{</span>
  <span class="nl">width</span><span class="p">:</span> <span class="m">100%</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p>It worked on the first try. I took it from there. I knew how to proceed. I
adjusted my Jekyll templates accordingly and changed the <code class="language-plaintext highlighter-rouge">minmax</code> value, in
order to fit three photos in the widest layout. I finally had a nicely looking
photo gallery. I even added captions to all the photos. Cool!</p>

<p><img src="/assets/images/2024-05-06-chatgpt-stories-helping-a-ruby-ignorant-1.png" alt="Grid gallery" /></p>

<p>Initially, by clicking on each photo, the original full-size photo was shown. I
thought that this was not very optimal, since a lot of network data needed to be
transferred. Most of my photos are taken with my Nikon D3400 DSLR camera and
their size can be up to 20MB. The solution would be to show some smaller version
of each photo initially, and only display the full-size version after a second
click.</p>

<p>I thought to myself, “I want each photo to have its own page. How do I do
that?”. I knew that it was possible to do it. My tags plugin is generating
pages for all post tags.</p>

<p>Enter ChatGPT. Again.</p>

<blockquote>
  <p>Let’s say I have a list of photos in a Jekyll website as a data file. I want
to create a page for each photo, where you can see the photo and links to the
previous and next photo will navigate you along the list.</p>
</blockquote>

<p>ChatGPT produced some valid HTML that I could work with, but the rest of the
code was not up to the task. It did not help much with the Jekyll integration
part. After a quick look around the web and the Jekyll documentation, I
understood I needed to write a custom plugin<sup id="fnref:5" role="doc-noteref"><a href="#fn:5" class="footnote" rel="footnote">4</a></sup>.</p>

<blockquote>
  <p>Your suggestions so far are not working. I think I need to write a custom
plugin.</p>
</blockquote>

<p>After the usual ChatGPT answer intro, I got the coveted code.</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">module</span> <span class="nn">Jekyll</span>
  <span class="k">class</span> <span class="nc">PhotoPagesGenerator</span> <span class="o">&lt;</span> <span class="no">Generator</span>
    <span class="n">safe</span> <span class="kp">true</span>
    <span class="n">priority</span> <span class="ss">:normal</span>

    <span class="k">def</span> <span class="nf">generate</span><span class="p">(</span><span class="n">site</span><span class="p">)</span>
      <span class="n">photos</span> <span class="o">=</span> <span class="n">site</span><span class="p">.</span><span class="nf">data</span><span class="p">[</span><span class="s1">'photos'</span><span class="p">]</span>
      <span class="n">photos</span><span class="p">.</span><span class="nf">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">photo</span><span class="p">,</span> <span class="n">index</span><span class="o">|</span>
        <span class="n">previous_photo</span> <span class="o">=</span> <span class="n">index</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="p">?</span> <span class="n">photos</span><span class="p">[</span><span class="n">index</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="p">:</span> <span class="kp">nil</span>
        <span class="n">next_photo</span> <span class="o">=</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">photos</span><span class="p">.</span><span class="nf">size</span> <span class="o">-</span> <span class="mi">1</span> <span class="p">?</span> <span class="n">photos</span><span class="p">[</span><span class="n">index</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span> <span class="p">:</span> <span class="kp">nil</span>

        <span class="n">site</span><span class="p">.</span><span class="nf">pages</span> <span class="o">&lt;&lt;</span> <span class="n">photoPage</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="n">site</span><span class="p">,</span> <span class="n">photo</span><span class="p">,</span> <span class="n">previous_photo</span><span class="p">,</span> <span class="n">next_photo</span><span class="p">)</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">class</span> <span class="n">photoPage</span> <span class="o">&lt;</span> <span class="no">Page</span>
    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">site</span><span class="p">,</span> <span class="n">photo</span><span class="p">,</span> <span class="n">previous_photo</span><span class="p">,</span> <span class="n">next_photo</span><span class="p">)</span>
      <span class="vi">@site</span> <span class="o">=</span> <span class="n">site</span>
      <span class="vi">@base</span> <span class="o">=</span> <span class="n">site</span><span class="p">.</span><span class="nf">source</span>
      <span class="vi">@dir</span> <span class="o">=</span> <span class="s1">''</span> <span class="c1"># Set the directory where you want the pages to be generated</span>
      <span class="vi">@name</span> <span class="o">=</span> <span class="n">photo</span><span class="p">[</span><span class="s1">'url'</span><span class="p">]</span> <span class="c1"># Use the photo URL as the page name</span>

      <span class="nb">self</span><span class="p">.</span><span class="nf">process</span><span class="p">(</span><span class="vi">@name</span><span class="p">)</span>
      <span class="nb">self</span><span class="p">.</span><span class="nf">data</span> <span class="o">=</span> <span class="p">{</span>
        <span class="s1">'layout'</span> <span class="o">=&gt;</span> <span class="s1">'photo_page'</span><span class="p">,</span>
        <span class="s1">'title'</span> <span class="o">=&gt;</span> <span class="n">photo</span><span class="p">[</span><span class="s1">'caption'</span><span class="p">],</span>
        <span class="s1">'photo'</span> <span class="o">=&gt;</span> <span class="n">photo</span><span class="p">,</span>
        <span class="s1">'previous_photo'</span> <span class="o">=&gt;</span> <span class="n">previous_photo</span><span class="p">,</span>
        <span class="s1">'next_photo'</span> <span class="o">=&gt;</span> <span class="n">next_photo</span>
      <span class="p">}</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>
<p>Voila! Once more, I made the necessary edits. I introduced wrapping around after
reaching the end of the photo list, simplified the code, based on the official
Jekyll documentation for generators, and set the correct path for the photos to
be shown.</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">module</span> <span class="nn">Jekyll</span>
  <span class="k">class</span> <span class="nc">PhotoPagesGenerator</span> <span class="o">&lt;</span> <span class="no">Generator</span>
    <span class="n">safe</span> <span class="kp">true</span>
    <span class="n">priority</span> <span class="ss">:normal</span>

    <span class="k">def</span> <span class="nf">generate</span><span class="p">(</span><span class="n">site</span><span class="p">)</span>
      <span class="n">photos</span> <span class="o">=</span> <span class="n">site</span><span class="p">.</span><span class="nf">data</span><span class="p">[</span><span class="s1">'photos'</span><span class="p">]</span>
      <span class="n">photos</span><span class="p">.</span><span class="nf">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">photo</span><span class="p">,</span> <span class="n">index</span><span class="o">|</span>
        <span class="n">previous_photo</span> <span class="o">=</span> <span class="n">photos</span><span class="p">[(</span><span class="n">index</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="n">photos</span><span class="p">.</span><span class="nf">size</span><span class="p">]</span>
        <span class="n">next_photo</span> <span class="o">=</span> <span class="n">photos</span><span class="p">[(</span><span class="n">index</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="n">photos</span><span class="p">.</span><span class="nf">size</span><span class="p">]</span>

        <span class="n">site</span><span class="p">.</span><span class="nf">pages</span> <span class="o">&lt;&lt;</span> <span class="no">PhotoPage</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="n">site</span><span class="p">,</span> <span class="n">photo</span><span class="p">,</span> <span class="n">previous_photo</span><span class="p">,</span> <span class="n">next_photo</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">class</span> <span class="nc">PhotoPage</span> <span class="o">&lt;</span> <span class="no">Page</span>
    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">site</span><span class="p">,</span> <span class="n">photo</span><span class="p">,</span> <span class="n">previous_photo</span><span class="p">,</span> <span class="n">next_photo</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span>
      <span class="vi">@site</span> <span class="o">=</span> <span class="n">site</span>
      <span class="vi">@base</span> <span class="o">=</span> <span class="n">site</span><span class="p">.</span><span class="nf">source</span>
      <span class="vi">@dir</span> <span class="o">=</span> <span class="s2">"/photography/"</span> <span class="o">+</span> <span class="n">photo</span><span class="p">[</span><span class="s2">"name"</span><span class="p">]</span>
      <span class="vi">@basename</span> <span class="o">=</span> <span class="s1">'index'</span>
      <span class="vi">@ext</span>      <span class="o">=</span> <span class="s1">'.html'</span>
      <span class="vi">@name</span>     <span class="o">=</span> <span class="s1">'index.html'</span>

      <span class="nb">self</span><span class="p">.</span><span class="nf">process</span><span class="p">(</span><span class="vi">@name</span><span class="p">)</span>
      <span class="nb">self</span><span class="p">.</span><span class="nf">data</span> <span class="o">=</span> <span class="p">{</span>
        <span class="s1">'layout'</span> <span class="o">=&gt;</span> <span class="s1">'photo_page'</span><span class="p">,</span>
        <span class="s1">'title'</span> <span class="o">=&gt;</span> <span class="n">photo</span><span class="p">[</span><span class="s2">"caption"</span><span class="p">],</span>
        <span class="s1">'photo'</span> <span class="o">=&gt;</span> <span class="n">photo</span><span class="p">,</span>
        <span class="s1">'previous_photo'</span> <span class="o">=&gt;</span> <span class="n">previous_photo</span><span class="p">,</span>
        <span class="s1">'next_photo'</span> <span class="o">=&gt;</span> <span class="n">next_photo</span><span class="p">,</span>
        <span class="s1">'index'</span> <span class="o">=&gt;</span> <span class="n">index</span> <span class="o">+</span> <span class="mi">1</span>  <span class="c1"># increment to start from 1,</span>
      <span class="p">}</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>I finally had it. I struggled a little more than with the CSS grid code, but I
had it. A page for every one of my photos. Enthusiastically, I uploaded the
changes.</p>

<p><img src="/assets/images/2024-05-06-chatgpt-stories-helping-a-ruby-ignorant-2.png" alt="Photo page" /></p>

<p>I am really satisfied with the outcome. I find it amazing how helpful ChatGPT
can be, if you have a rough idea of what you want to achieve, you know the right
keywords to use in your query and are willing to play a little with the code
afterwards. And, testament to its value, I consider it as a great companion in
my tech endeavours and look forward to further exploring its powers.</p>
<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>I am programming in C++ at work, so I frequently visit
<a href="https://cppreference.com">cppreference.com</a>. <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:2" role="doc-endnote">
      <p>This website is based on the <a href="https://github.com/jekyll/minima">minima</a>
theme. <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:3" role="doc-endnote">
      <p>I am using <a href="https://github.com/pattex/jekyll-tagging">jekyll-tagging</a>. <a href="#fnref:3" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:5" role="doc-endnote">
      <p>Maybe there is a more elegant way to do it. Suggestions are welcome. <a href="#fnref:5" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name></name></author><category term="blog" /><category term="html" /><category term="css" /><category term="chatgpt" /><category term="ruby" /><category term="jekyll" /><summary type="html"><![CDATA[The first time I used ChatGPT I was astounded. Here was something that felt like magic. Since then, a lot more information has been made available about LLMs in general. Us laymen have peeked inside the magician’s hat. We know more about their capabilities and shortcomings. We know that they can hallucinate at times and that their output should be used with care. But the point still remains; what ChatGPT and the rest of the LLMs offer is awesome.]]></summary></entry><entry><title type="html">See you at the library</title><link href="https://ckardaris.github.io/blog/2024/05/04/see-you-at-the-library.html" rel="alternate" type="text/html" title="See you at the library" /><published>2024-05-04T00:00:00+00:00</published><updated>2024-05-04T00:00:00+00:00</updated><id>https://ckardaris.github.io/blog/2024/05/04/see-you-at-the-library</id><content type="html" xml:base="https://ckardaris.github.io/blog/2024/05/04/see-you-at-the-library.html"><![CDATA[<p>I was recently travelling again. On the first day of the trip, I had to work,
but the hostel I was staying at did not have any quiet space for that purpose.
I tried to use the common room; however, the morning cheers of vacationing
children did not provide an ideal working environment.</p>

<p>I had to evaluate my options. Many people working remotely go to cafés. They
enjoy a cup of coffee and a piece of cake and hopefully something else
later<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>, until it is time to call it a day. Visiting the city for the first
time, I had no idea where to find good cafés for working. I didn’t want to
spend more time searching for a suitable place, when I should have already been
working. So, I decided to play it safe.</p>

<p>In the maps application on my phone, I entered:</p>
<blockquote>
  <p>library</p>
</blockquote>

<p>Libraries have always held a soft spot in my heart. I am a book aficionado and
love learning new stuff, so a place that contains such a variety of books and
knowledge naturally appeals to me. Despite this, I hadn’t visited a library
with the intention of spending some productive time there in nearly five years.
It was during my last year of studies. Before the whole Covid-19 adventure.</p>

<p>I scanned the map on my phone for a library within walking distance and was
satisfied that the main library of the city was only 1.5 kilometre down the
street. I packed my laptop and headed towards there.</p>

<p>The first visit to a previously unknown library is a pleasant experience for
me.  It mostly comes down to the curiosity about the arrangement of the books,
the availability of working spaces and, most importantly, the people that are
already there. I did a brief tour around. I was looking for a suitable place to
“camp”, while quickly observing the other library visitors. Some working alone,
some students on a group project, some on the public computers.</p>

<p>I soon had my spot. I unpacked my stuff and started working. I like to have my
headphones on, when working in public spaces. But I don’t want to block all
outside sounds. I like knowing that the environment around me is lively. It
gives me a sense of purpose.</p>

<p>I believe that the collective focus of people working or studying, even though
they do not interact directly with one another, has an interesting effect which
in turn makes me more focused on my work. It is what makes libraries unique.
They are not just buildings or places of public service, but a vibrant social
environment. It is also why I don’t plan to wait for five more years before my
next visit.</p>

<p>You should not wait either. If you ever need a change of scenery when working,
you know what to do. Open the maps application on your phone<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">2</a></sup> and enter the
magic word:</p>
<blockquote>
  <p>library</p>
</blockquote>

<p>See you there.</p>
<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>Ordering once and staying there for multiple hours is at least rude in my
opinion. <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:2" role="doc-endnote">
      <p>Old-school ways of searching are not frowned upon. <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name></name></author><category term="blog" /><category term="library" /><category term="life" /><category term="travel" /><category term="work" /><summary type="html"><![CDATA[I was recently travelling again. On the first day of the trip, I had to work, but the hostel I was staying at did not have any quiet space for that purpose. I tried to use the common room; however, the morning cheers of vacationing children did not provide an ideal working environment.]]></summary></entry></feed>